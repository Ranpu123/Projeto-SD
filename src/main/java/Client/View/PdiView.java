/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Client.View;

import Client.DataModels.PdiTable;
import Client.Util.Session;
import Client.util.HandleRequest;
import Model.PDI;
import Model.User;
import Requests.*;
import Response.*;
import Response.Response;
import java.util.ArrayList;
import java.util.List;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author vinic
 */
public class PdiView extends javax.swing.JPanel {
    
    private PdiTable pdiTable = new PdiTable();
    
    /**
     * Creates new form PdiView
     */
    public PdiView() {
        initComponents();
        atualizarTabela();
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = jTable1.getSelectedRow();
                    if(selectedRow != -1){
                        PDI pdi = pdiTable.getPDI(selectedRow);
                        if(pdi != null){
                            atualizarForm(pdi);
                        }
                    }
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        errorLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jlabel = new javax.swing.JLabel();
        buscaInput = new javax.swing.JTextField();
        buscaBtn = new javax.swing.JButton();
        atualizarTabela = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        acessivelInput = new javax.swing.JCheckBox();
        idInput = new javax.swing.JTextField();
        nomeInput = new javax.swing.JTextField();
        xInput = new javax.swing.JTextField();
        yInput = new javax.swing.JTextField();
        avisoInput = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cadastrarBtn = new javax.swing.JButton();
        atualizarBtn = new javax.swing.JButton();
        deletarBtn = new javax.swing.JButton();
        limparBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        errorLabel.setText("Error");
        add(errorLabel, java.awt.BorderLayout.PAGE_END);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jlabel.setText("Id:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(jlabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(buscaInput, gridBagConstraints);

        buscaBtn.setText("Buscar");
        buscaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(buscaBtn, gridBagConstraints);

        atualizarTabela.setText("Atualizar");
        atualizarTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarTabelaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(atualizarTabela, gridBagConstraints);

        add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Id:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Nome:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Posição");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel3, gridBagConstraints);

        jLabel4.setText("X:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Y:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Aviso:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel6, gridBagConstraints);

        acessivelInput.setText("Acessível ?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(acessivelInput, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(idInput, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(nomeInput, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(xInput, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(yInput, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(avisoInput, gridBagConstraints);

        jLabel7.setText("Estado:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel7, gridBagConstraints);

        cadastrarBtn.setText("Cadastrar");
        cadastrarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        jPanel2.add(cadastrarBtn, gridBagConstraints);

        atualizarBtn.setText("Atualizar");
        atualizarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        jPanel2.add(atualizarBtn, gridBagConstraints);

        deletarBtn.setText("Deletar");
        deletarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletarBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(30, 9, 9, 9);
        jPanel2.add(deletarBtn, gridBagConstraints);

        limparBtn.setText("Limpar");
        limparBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        jPanel2.add(limparBtn, gridBagConstraints);

        add(jPanel2, java.awt.BorderLayout.LINE_END);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(pdiTable);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTable1);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jPanel3, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void buscaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscaBtnActionPerformed

    private void deletarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletarBtnActionPerformed
        SwingUtilities.invokeLater(() -> {
            deletarPDI();
            atualizarTabela();
            limparForm();
        });
    }//GEN-LAST:event_deletarBtnActionPerformed

    private void cadastrarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarBtnActionPerformed
        SwingUtilities.invokeLater(() -> {
            cadastrarPDI();
            atualizarTabela();
            limparForm();
        });
    }//GEN-LAST:event_cadastrarBtnActionPerformed

    private void atualizarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarBtnActionPerformed
        SwingUtilities.invokeLater(() -> {
            atualizarPDI();
            atualizarTabela();
            limparForm();
        });
    }//GEN-LAST:event_atualizarBtnActionPerformed

    private void limparBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparBtnActionPerformed
        limparForm();
    }//GEN-LAST:event_limparBtnActionPerformed

    private void atualizarTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarTabelaActionPerformed
        atualizarTabela();
    }//GEN-LAST:event_atualizarTabelaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox acessivelInput;
    private javax.swing.JButton atualizarBtn;
    private javax.swing.JButton atualizarTabela;
    private javax.swing.JTextField avisoInput;
    private javax.swing.JButton buscaBtn;
    private javax.swing.JTextField buscaInput;
    private javax.swing.JButton cadastrarBtn;
    private javax.swing.JButton deletarBtn;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JTextField idInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jlabel;
    private javax.swing.JButton limparBtn;
    private javax.swing.JTextField nomeInput;
    private javax.swing.JTextField xInput;
    private javax.swing.JTextField yInput;
    // End of variables declaration//GEN-END:variables
    
    private void atualizarTabela(){
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                HandleRequest.getInstance().makeRequest(new FindPOIsRequest(Session.getInstance().getToken()), (Response <?> res) -> {
                    if(!(res instanceof FindPOIsResponse)){
                        return;
                    }
                    List<PDI> pdis = new ArrayList<>();
                    pdis =  ((FindPOIsResponse)res).payload().getPdis();
                    pdiTable.updateData(pdis);
                }, errorLabel::setText);
            }
        });
    }
    
    private void atualizarForm(PDI pdi){
        idInput.setText( String.valueOf(pdi.getId()));
        nomeInput.setText(pdi.getNome());
        xInput.setText(String.valueOf(pdi.getPosicao().getX()));
        yInput.setText(String.valueOf(pdi.getPosicao().getY()));
        avisoInput.setText(pdi.getAviso());
        acessivelInput.setSelected(pdi.getAcessivel());
    }
    
    private void limparForm(){
        idInput.setText("");
        nomeInput.setText("");
        xInput.setText("");
        yInput.setText("");
        avisoInput.setText("");
        acessivelInput.setSelected(false);
    }
    
    private void cadastrarPDI(){
        try{    
            String nome = nomeInput.getText();
            String aviso = avisoInput.getText();
            Double X = Double.parseDouble(xInput.getText());
            Double Y = Double.parseDouble(yInput.getText());
            Boolean acessivel = acessivelInput.isSelected();

            HandleRequest.getInstance().makeRequest(new CreatePOIRequest(Session.getInstance().getToken(), nome, X, Y, null, aviso, acessivel), (Response<?> res) -> {
                if(!(res instanceof CreatePOIResponse)){
                    return;
                }
            }, errorLabel::setText);
        }catch(NumberFormatException e){
            errorLabel.setText("Erro na conversão do Double. "+ e.getMessage());
        }
    }
    
    private void atualizarPDI(){
        try{
            Long id = Long.parseLong(idInput.getText());
            String nome = nomeInput.getText().isBlank() ? null : nomeInput.getText();
            String aviso = avisoInput.getText().isBlank() ? null : avisoInput.getText();
            Double X = xInput.getText().isBlank() ? null : Double.parseDouble(xInput.getText());
            Double Y = yInput.getText().isBlank() ? null : Double.parseDouble(yInput.getText());
            Boolean acessivel = acessivelInput.isSelected();

            HandleRequest.getInstance().makeRequest(new UpdatePOIRequest(Session.getInstance().getToken(), id, nome, X, Y, null, aviso, acessivel), (Response<?> res) -> {
                if(!(res instanceof UpdatePOIResponse)){
                    return;
                }
            }, errorLabel::setText);
        }catch(NumberFormatException e){
            errorLabel.setText("Erro na conversão do Double. "+ e.getMessage());
        }
    }
    
    private void deletarPDI(){
        try{
            Long id = Long.parseLong(idInput.getText());
            HandleRequest.getInstance().makeRequest(new DeletePOIRequest(Session.getInstance().getToken(), id), (Response<?> res) -> {
                if(!(res instanceof DeletePOIResponse)){
                    return;
                }
                errorLabel.setText(((DeletePOIResponse)res).payload().getMensagem());
            }, errorLabel::setText);
        }catch(NumberFormatException e){
            errorLabel.setText("Erro na conversão do Double. "+ e.getMessage());
        }
    }
}
